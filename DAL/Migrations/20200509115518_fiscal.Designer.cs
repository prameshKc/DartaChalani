// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(DartaDbContext))]
    [Migration("20200509115518_fiscal")]
    partial class fiscal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainModel.Chalan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblChalan");
                });

            modelBuilder.Entity("DomainModel.ChalanFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblChalanFiles");
                });

            modelBuilder.Entity("DomainModel.ChalanPatras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("fileId")
                        .HasColumnType("int");

                    b.Property<int>("purjiId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fileId");

                    b.HasIndex("purjiId");

                    b.ToTable("ChalanPatras");
                });

            modelBuilder.Entity("DomainModel.ChitthiDartaPatras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("fileId")
                        .HasColumnType("int");

                    b.Property<int>("purjiDartaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fileId");

                    b.HasIndex("purjiDartaId");

                    b.ToTable("ChitthiDartaPatras");
                });

            modelBuilder.Entity("DomainModel.ChitthiPurji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChalaniNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LetterCount")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLetterCount")
                        .HasColumnType("int");

                    b.Property<string>("bsRegDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("chalanId")
                        .HasColumnType("int");

                    b.Property<bool>("isTicket")
                        .HasColumnType("bit");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<string>("wardNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("chalanId");

                    b.HasIndex("subjectId");

                    b.ToTable("ChitthiPurjis");
                });

            modelBuilder.Entity("DomainModel.ChitthiPurjiDarta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DartaMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DartaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LetterCount")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatraMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLetterCount")
                        .HasColumnType("int");

                    b.Property<int>("dartaId")
                        .HasColumnType("int");

                    b.Property<int>("extra")
                        .HasColumnType("int");

                    b.Property<bool>("isTicket")
                        .HasColumnType("bit");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<string>("wardNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("dartaId");

                    b.HasIndex("subjectId");

                    b.ToTable("chitthiPurjiDartas");
                });

            modelBuilder.Entity("DomainModel.Dartas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Dartas");
                });

            modelBuilder.Entity("DomainModel.FieldRekhankanChalani", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChalaniNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LetterCount")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLetterCount")
                        .HasColumnType("int");

                    b.Property<int>("chalanId")
                        .HasColumnType("int");

                    b.Property<string>("chalanMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isTicket")
                        .HasColumnType("bit");

                    b.Property<string>("patraMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<string>("wardNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("chalanId");

                    b.HasIndex("subjectId");

                    b.ToTable("tblFieldRekhankanChalani");
                });

            modelBuilder.Entity("DomainModel.FieldRekhankanDarta.FieldRekhankanDarta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChetraFal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DartaMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DartaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KitaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LetterCount")
                        .HasColumnType("int");

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonOfReject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RekhankanMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondRekhankanMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TamiliMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLetterCount")
                        .HasColumnType("int");

                    b.Property<string>("sanketNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wardNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblFieldRekhankanDarta");
                });

            modelBuilder.Entity("DomainModel.FieldRekhankanDarta.FieldRekhankanDartaFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblFieldRekhankanDartaFile");
                });

            modelBuilder.Entity("DomainModel.FieldRekhankanDarta.RekhankanDartaPatras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("fieldRekhankanDartaId")
                        .HasColumnType("int");

                    b.Property<int>("fileId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fieldRekhankanDartaId");

                    b.HasIndex("fileId");

                    b.ToTable("tblFieldRekhankanDartaPatra");
                });

            modelBuilder.Entity("DomainModel.Fiscal.FiscalYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FiscalYearEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FiscalYearStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FiscalYearStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblFiscalYear");
                });

            modelBuilder.Entity("DomainModel.HalsabikChalani.HalsabikChalani", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChalaniNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LetterCount")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLetterCount")
                        .HasColumnType("int");

                    b.Property<int>("chalanId")
                        .HasColumnType("int");

                    b.Property<string>("chalanMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isTicket")
                        .HasColumnType("bit");

                    b.Property<string>("patraMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<string>("wardNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("chalanId");

                    b.HasIndex("subjectId");

                    b.ToTable("HalsabikChalanis");
                });

            modelBuilder.Entity("DomainModel.HalsabikChalani.HalsabikChalaniFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HalsabikChalaniFiles");
                });

            modelBuilder.Entity("DomainModel.HalsabikChalani.HalsabikChalaniPatras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HalsabikChalaniId")
                        .HasColumnType("int");

                    b.Property<int>("fileId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("HalsabikChalaniId");

                    b.HasIndex("fileId");

                    b.ToTable("HalsabikChalaniPatras");
                });

            modelBuilder.Entity("DomainModel.HalsabikDarta.HalsabikDarta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxPatra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentKitaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DartaMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DartaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSanketNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MalpotChalanNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MalpotLetterCount")
                        .HasColumnType("int");

                    b.Property<string>("MalpotMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SabikKitaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendMiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLetterCount")
                        .HasColumnType("int");

                    b.Property<string>("wardNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HalsabikDartas");
                });

            modelBuilder.Entity("DomainModel.HalsabikDarta.HalsabikDartaFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HalsabikDartaFiles");
                });

            modelBuilder.Entity("DomainModel.HalsabikDarta.HalsabikDartaPatras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HalsabikDartaId")
                        .HasColumnType("int");

                    b.Property<int>("fileId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("HalsabikDartaId");

                    b.HasIndex("fileId");

                    b.ToTable("HalsabikDartaPatras");
                });

            modelBuilder.Entity("DomainModel.Prefix", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("startIndex")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tblPrefix");
                });

            modelBuilder.Entity("DomainModel.PurjiDartaFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PurjiDartaFiles");
                });

            modelBuilder.Entity("DomainModel.RekhankanChalanFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblRekhankanChalanFile");
                });

            modelBuilder.Entity("DomainModel.RekhankanChalanPatras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("fieldRekhankanChalaniId")
                        .HasColumnType("int");

                    b.Property<int>("fileId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fieldRekhankanChalaniId");

                    b.HasIndex("fileId");

                    b.ToTable("tblFiledRekhakanChalanPatras");
                });

            modelBuilder.Entity("DomainModel.Setting.OfficeName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("siteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("siteId");

                    b.ToTable("OfficeName");
                });

            modelBuilder.Entity("DomainModel.Setting.SiteSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSiteSetting");
                });

            modelBuilder.Entity("DomainModel.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSubject");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("activeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("DomainModel.ChalanPatras", b =>
                {
                    b.HasOne("DomainModel.ChalanFiles", "file")
                        .WithMany("patras")
                        .HasForeignKey("fileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.ChitthiPurji", "purji")
                        .WithMany("patras")
                        .HasForeignKey("purjiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.ChitthiDartaPatras", b =>
                {
                    b.HasOne("DomainModel.PurjiDartaFiles", "file")
                        .WithMany("patras")
                        .HasForeignKey("fileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.ChitthiPurjiDarta", "purjiDarta")
                        .WithMany("patras")
                        .HasForeignKey("purjiDartaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.ChitthiPurji", b =>
                {
                    b.HasOne("DomainModel.Chalan", "chalan")
                        .WithMany("chalanPurji")
                        .HasForeignKey("chalanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.Subject", "subject")
                        .WithMany("purjiSubject")
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.ChitthiPurjiDarta", b =>
                {
                    b.HasOne("DomainModel.Dartas", "DartaType")
                        .WithMany("PurjiDarta")
                        .HasForeignKey("dartaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.Subject", "subject")
                        .WithMany("purjiDartaSubject")
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.FieldRekhankanChalani", b =>
                {
                    b.HasOne("DomainModel.Chalan", "chalan")
                        .WithMany("FieldRekhankanChalanis")
                        .HasForeignKey("chalanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.Subject", "subject")
                        .WithMany("FieldRekhankanChalanis")
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.FieldRekhankanDarta.RekhankanDartaPatras", b =>
                {
                    b.HasOne("DomainModel.FieldRekhankanDarta.FieldRekhankanDarta", "FieldRekhankanDarta")
                        .WithMany("patras")
                        .HasForeignKey("fieldRekhankanDartaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.FieldRekhankanDarta.FieldRekhankanDartaFile", "file")
                        .WithMany("patras")
                        .HasForeignKey("fileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.HalsabikChalani.HalsabikChalani", b =>
                {
                    b.HasOne("DomainModel.Chalan", "chalan")
                        .WithMany("HalsabikChalanis")
                        .HasForeignKey("chalanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.Subject", "subject")
                        .WithMany("HalsabikChalanis")
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.HalsabikChalani.HalsabikChalaniPatras", b =>
                {
                    b.HasOne("DomainModel.HalsabikChalani.HalsabikChalani", "HalsabikChalani")
                        .WithMany("patras")
                        .HasForeignKey("HalsabikChalaniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.HalsabikChalani.HalsabikChalaniFile", "file")
                        .WithMany("patras")
                        .HasForeignKey("fileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.HalsabikDarta.HalsabikDartaPatras", b =>
                {
                    b.HasOne("DomainModel.HalsabikDarta.HalsabikDarta", "HalsabikDarta")
                        .WithMany("patras")
                        .HasForeignKey("HalsabikDartaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.HalsabikDarta.HalsabikDartaFile", "file")
                        .WithMany("patras")
                        .HasForeignKey("fileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.RekhankanChalanPatras", b =>
                {
                    b.HasOne("DomainModel.FieldRekhankanChalani", "FieldRekhankan")
                        .WithMany("patras")
                        .HasForeignKey("fieldRekhankanChalaniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.RekhankanChalanFiles", "file")
                        .WithMany("patras")
                        .HasForeignKey("fileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.Setting.OfficeName", b =>
                {
                    b.HasOne("DomainModel.Setting.SiteSetting", "site")
                        .WithMany("Names")
                        .HasForeignKey("siteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
